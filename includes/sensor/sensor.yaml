- platform: template
  sensors:
    home_mode:
      friendly_name: "Housemode"
      value_template: >-
        {% if is_state("binary_sensor.day_tod", "on") %}daymode{% elif is_state("binary_sensor.day_tod", "off") and is_state("input_boolean.virt_sleepingmode", "on") %}sleepingmode{% else %}nightmode{% endif %}
      icon_template: >
        {% if is_state("binary_sensor.day_tod", "on") %}mdi:white-balance-sunny{% elif is_state("binary_sensor.day_tod", "off") and is_state("input_boolean.virt_sleepingmode", "on") %}mdi:sleep{% else %}mdi:power-sleep{% endif %}

    count_update:
      friendly_name: "Updates Count"
      value_template: >-
        Оновлень {{states.update | selectattr ('state', 'equalto', 'on') | list | length}} з {{''}}
        {%- set domains = ['update'] -%}
        {%- for domain in domains -%}
          {%- for item in states[domain] -%}
            {% if loop.first %}
              {{-loop.length}}
            {% endif %}
          {%- endfor -%}
        {%- endfor -%}
      icon_template: >
        mdi:update

    livingroom_temperature:
      friendly_name: "Livingroom temperature"
      unit_of_measurement: "°C"
      value_template: "{{ states.sensor.xiaomi_miio_device_temperature.state }}"
      device_class: temperature
    livingroom_humidity:
      friendly_name: "Livingroom humidity"
      unit_of_measurement: "%"
      value_template: "{{  states.sensor.xiaomi_miio_device_humidity.state }}"
      device_class: humidity
    livingroom_aqi:
      friendly_name: "Livingroom aqi"
      value_template: "{{ states.sensor.xiaomi_miio_device_pm2_5.state }}"

    ligts_on:
      friendly_name: "Ligts turned on"
      value_template: >
        {%- set sel = [
        '0x0017880103aa4b71',
        'livingroom_lights', 
        'livingroom_table_background',
        'wled',
        'gyver_lamp_esp_74e9c8',
        '0x00178801030318a1',
        'guestroom_color_bulb',
        'main_corridor_light',
        'shelly1',
        'kitchen_ceiling_lights',
        'kitchen_strip',  
        ] -%}
        {{- states.light | selectattr('object_id', 'in', sel) | selectattr('state','eq','on') | list | length -}}

    switches_on:
      friendly_name: "Switches (as a light) turned on"
      value_template: >
        {%- set sel = [
        'outdoor_floodlight', 
        'yard_light', 
        'backyard_light',
        'terrace_spotlights',
        ] -%}
        {{- states.switch | selectattr('object_id', 'in', sel) | selectattr('state','eq','on') | list | length }}

    opened_windows:
      friendly_name: "Opened Windows"
      value_template: >
        {%- set sel = [
        'toilet_window_sensor_contact',
        'dining_room_window_sensor_contact',
        'livingroom_window_sensor_contact',
        'main_corridor_window_sensor_contact',
        'kitchen_window_sensor_contact',
        'kidsroom_window_sensor_contact', 
        ] -%}
        {{- states.binary_sensor | selectattr('object_id', 'in', sel) | selectattr('state','eq','on') | list | length }}

    opened_doors:
      friendly_name: "Opened Doors"
      value_template: >
        {%- set sel = [
        'terrace_door_sensor_contact',
        'hallway_contact_sensor_ring',
        'main_corridor_door_sensor_contact',
        ] -%}
        {{- states.binary_sensor | selectattr('object_id', 'in', sel) | selectattr('state','eq','on') | list | length }}
