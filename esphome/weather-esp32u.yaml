substitutions:
  devicename: weather-station-esp32u
  upper_devicename: Weather Station esp32u
  project: "weather.station"
  projectname: "weather.station"
  projecversion: "2"
  board: esp32dev
esphome:
  name: ${devicename}
  friendly_name: ${upper_devicename}
  project:
    name: ${projectname}
    version: ${projecversion}
esp32:
  board:  ${board}
  framework:
    type: arduino
logger:
api:
ota:
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
      static_ip: 192.168.10.44
      gateway: 192.168.10.1
      subnet: 255.255.255.0
time:
  - platform: homeassistant
    id: homeassistant_time    
sun:
  latitude: !secret latitude
  longitude: !secret longitude
web_server:
# i2c:
#   sda: 17
#   scl: 16
dallas:
  - pin: 25
text_sensor:
  - platform: sun
    name: Next sunrise
    type: sunrise
    update_interval: 299s
  - platform: sun
    name: Next sunset
    type: sunset
    update_interval: 299s
sensor:
  - platform: homeassistant
    id: humidity
    entity_id: sensor.openweathermap_humidity
  - platform: homeassistant
    id: pressure
    entity_id: sensor.openweathermap_pressure

  - platform: dallas
    address: 0x3b3c01d60756cf28
    id: dallas_sensor
    name: "Dallas ${upper_devicename} Temperature"

  # - platform: bme680
  #   address: 0x77
  #   temperature:
  #     name: "BME ${upper_devicename} Temperature"
  #     id: bme_temperature
  #   pressure:
  #     # name: "BME ${upper_devicename} Pressure"
  #     id: pressure_old
  #   humidity:
  #     # name: "BME ${upper_devicename} Humidity"
  #     id: humidity_old
  - platform: pulse_counter
    pin: 
      number: 19
      mode: INPUT_PULLUP
    unit_of_measurement: 'm/s'
    name: '${upper_devicename} Wind speed sensor'
    icon: 'mdi:weather-windy'
    id: my_wind
    count_mode:
      rising_edge: DISABLE
      falling_edge: INCREMENT
    internal_filter: 13us
    update_interval: 60s
    accuracy_decimals: 2
    filters:
      - multiply: 0.055578
      - sliding_window_moving_average:
          window_size: 7
          send_every: 4
  - platform: template
    name: "${upper_devicename} Pressure mmHg"
    lambda: |-
      return ((id(pressure).state) /1.333223 ); 
    update_interval: 60s
    icon: 'mdi:gauge-full'
    unit_of_measurement: "mmHg"
  - platform: template
    name: "${upper_devicename} Absolute humidity"
    lambda: |-
      const float mw = 18.01534;    // molar mass of water g/mol
      const float r = 8.31447215;   // Universal gas constant J/mol/K
      return (6.112 * powf(2.718281828, (17.67 * id(dallas_sensor).state) /
        (id(dallas_sensor).state + 243.5)) * id(humidity).state * mw) /
        ((273.15 + id(dallas_sensor).state) * r); // in grams/m^3
    accuracy_decimals: 2
    update_interval: 60s
    icon: 'mdi:water'
    unit_of_measurement: 'g/m³'
  - platform: template
    name: "${upper_devicename} Dew point"
    lambda: |-
      return (243.5*(log(id(humidity).state/100)+((17.67*id(dallas_sensor).state)/
      (243.5+id(dallas_sensor).state)))/(17.67-log(id(humidity).state/100)-
      ((17.67*id(dallas_sensor).state)/(243.5+id(dallas_sensor).state))));
    unit_of_measurement: °C
    update_interval: 60s
    icon: 'mdi:thermometer-alert'




button:
  - platform: restart
    name: "Restart $upper_devicename"
    icon: "mdi:reload"