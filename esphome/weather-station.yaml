substitutions:
  devicename: weather-station
  upper_devicename: Weather-Station

esphome:
  name: ${devicename}
  platform: ESP32
  board: esp32dev
  project:
    name: "weather.station"
    version: "1"
    
logger:
  level: WARN
api:
ota:
  password: !secret ota_password
mdns:
web_server:
wifi:
  networks:
  - ssid: !secret ssid
    password: !secret password
    manual_ip:
      static_ip: 192.168.10.9
      gateway: 192.168.10.1
      subnet: 255.255.255.0
  ap:
    ssid: "${devicename} Fallback Hotspot"
    password: !secret ap_password
time:
  - platform: homeassistant
    id: homeassistant_time    
sun:
  latitude: !secret latitude
  longitude: !secret longitude
  
captive_portal:
i2c:
  sda: 21
  scl: 22

# bme680_bsec:
#     address: 0x77  

binary_sensor:
  - platform: status
    name: "Status ${upper_devicename}"
    
text_sensor:
  - platform: sun
    name: Next sunrise
    type: sunrise
    update_interval: 299s
  - platform: sun
    name: Next sunset
    type: sunset
    update_interval: 299s
  - platform: template
    name: "${devicename} wind direction"
    id: wind_dir_card
sensor:
  - platform: bme680
    address: 0x77
  # - platform: bme680_bsec
    temperature:
      name: "${upper_devicename} Temperature"
      id: esp_temperature
      filters:
        - lambda: return x - 1;
    pressure:
      # name: "${upper_devicename} Pressure"
      id: pressure_2
    humidity:
      name: "${upper_devicename} Humidity"
      id: esp_humidity
    # gas_resistance:
    #   name: "${upper_devicename} Gas Resistance"
    #   filters:
    #     - median
    # iaq:
    #   name: "${upper_devicename} IAQ"
    #   filters:
    #     - median
    # iaq_accuracy:
    #   name: "${upper_devicename} Numeric IAQ Accuracy"
    # co2_equivalent:
    #   name: "${upper_devicename} CO2 Equivalent"
    #   filters:
    #     - median
    # breath_voc_equivalent:
    #   name: "${upper_devicename} Breath VOC Equivalent"
    #   filters:
    #     - median
  - platform: template
    name: "Pressure mmHg"
    lambda: |-
      return ((id(pressure_2).state) /1.333223 ); 
    update_interval: 60s
    icon: 'mdi:gauge-full'
    unit_of_measurement: "mmHg"
  - platform: template
    name: "Altitude"
    lambda: |-
      const float STANDARD_SEA_LEVEL_PRESSURE = 1013.25; //in hPa, see note
      return ((id(esp_temperature).state + 273.15) / 0.0065) *
        (powf((STANDARD_SEA_LEVEL_PRESSURE / id(pressure_2).state), 0.190234) - 1); // in meter
    update_interval: 60s
    icon: 'mdi:signal'
    unit_of_measurement: 'm'
  - platform: template
    name: "Absolute humidity"
    lambda: |-
      const float mw = 18.01534;    // molar mass of water g/mol
      const float r = 8.31447215;   // Universal gas constant J/mol/K
      return (6.112 * powf(2.718281828, (17.67 * id(esp_temperature).state) /
        (id(esp_temperature).state + 243.5)) * id(esp_humidity).state * mw) /
        ((273.15 + id(esp_temperature).state) * r); // in grams/m^3
    accuracy_decimals: 2
    update_interval: 60s
    icon: 'mdi:water'
    unit_of_measurement: 'g/m³'
  - platform: template
    name: "Dew point"
    lambda: |-
      return (243.5*(log(id(esp_humidity).state/100)+((17.67*id(esp_temperature).state)/
      (243.5+id(esp_temperature).state)))/(17.67-log(id(esp_humidity).state/100)-
      ((17.67*id(esp_temperature).state)/(243.5+id(esp_temperature).state))));
    unit_of_measurement: °C
    update_interval: 60s
    icon: 'mdi:thermometer-alert'
  - platform: template
    # name: "${devicename} wind heading"
    id: wind_heading
    unit_of_measurement: "°"
  - platform: pulse_counter
    pin: 
      number: 12
      mode: INPUT_PULLUP
    unit_of_measurement: 'm/s'
    name: 'Wind sensor'
    icon: 'mdi:weather-windy'
    id: my_wind
    count_mode:
      rising_edge: DISABLE
      falling_edge: INCREMENT
    internal_filter: 13us
    update_interval: 60s
    accuracy_decimals: 2
    filters:
      # - multiply: 0.0055578
      - multiply: 0.055578
      - sliding_window_moving_average:
          # window_size: 2
          # send_every: 1
          window_size: 7
          send_every: 4
  - platform: resistance
    sensor: source_sensor
    configuration: DOWNSTREAM
    resistor: 20kOhm
    id: resistance_sensor
    reference_voltage: 5V
    filters:
      - median:
          window_size: 7
          send_every: 4
          send_first_at: 3
    on_value:
      - if:
          condition:
            sensor.in_range:
              id: resistance_sensor
              above: 32000
              below: 35000
          then:
            - text_sensor.template.publish:
                id: wind_dir_card
                state: "N"
            - sensor.template.publish:
                id: wind_heading
                state: 0.0
      - if:
          condition:
            sensor.in_range:
              id: resistance_sensor
              above: 17000
              below: 19000
          then:
            - text_sensor.template.publish:
                id: wind_dir_card
                state: "NE"
            - sensor.template.publish:
                id: wind_heading
                state: 45.0
      - if:
          condition:
            sensor.in_range:
              id: resistance_sensor
              above: 4200
              below: 4500
          then:
            - text_sensor.template.publish:
                id: wind_dir_card
                state: "E"
            - sensor.template.publish:
                id: wind_heading
                state: 90.0
      - if:
          condition:
            sensor.in_range:
              id: resistance_sensor
              above: 2300
              below: 2600
          then:
            - text_sensor.template.publish:
                id: wind_dir_card
                state: "SE"
            - sensor.template.publish:
                id: wind_heading
                state: 135.0
      - if:
          condition:
            sensor.in_range:
              id: resistance_sensor
              above: 1000
              below: 1300
          then:
            - text_sensor.template.publish:
                id: wind_dir_card
                state: "S"
            - sensor.template.publish:
                id: wind_heading
                state: 180.0
      - if:
          condition:
            sensor.in_range:
              id: resistance_sensor
              above: 9100
              below: 9400
          then:
            - text_sensor.template.publish:
                id: wind_dir_card
                state: "SW"
            - sensor.template.publish:
                id: wind_heading
                state: 225.0
      # - if:
      #     condition:
      #       sensor.in_range:
      #         id: resistance_sensor
      #         above: 37500
      #         below: 38500
      #     then:
      #       - text_sensor.template.publish:
      #           id: wind_dir_card
      #           state: "W"
      #       - sensor.template.publish:
      #           id: wind_heading
      #           state: 270.0
      # - if:
      #     condition:
      #       sensor.in_range:
      #         id: resistance_sensor
      #         above: 24400
      #         below: 25000
      #     then:
      #       - text_sensor.template.publish:
      #           id: wind_dir_card
      #           state: "NW"
      #       - sensor.template.publish:
      #           id: wind_heading
      #           state: 315.0
  - platform: adc
    id: source_sensor
    pin: GPIO34
    update_interval: 5s
    attenuation: 11db



#deep_sleep:
#  run_duration: 60s
#  sleep_duration: 300s


