substitutions:
  name: mic
  friendly_name: mic
esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  name_add_mac_suffix: false
  min_version: 2023.10.1
  on_boot:
    - priority: -100
      then:
        - wait_until: api.connected
        - delay: 1s
        - if:
            condition:
              switch.is_on: use_wake_word
            then:
              - voice_assistant.start_continuous:
button:
  - platform: factory_reset
    id: factory_reset_btn
    name: Factory reset
esp32:
  board: esp32dev
  framework:
    type: arduino
logger:
  level: NONE
api:
  services:
    - service: start_va
      then:
        - voice_assistant.start
    - service: stop_va
      then:
        - voice_assistant.stop
ota:
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: 192.168.10.26
    gateway: 192.168.10.1
    subnet: 255.255.255.0
i2s_audio:
  - i2s_lrclk_pin: GPIO27
    i2s_bclk_pin: GPIO26
media_player:
  - platform: i2s_audio
    name: None
    id: onju_out
    dac_type: external
    i2s_dout_pin: GPIO25
    mode: mono
    mute_pin:
      number: GPIO23
      inverted: True
microphone:
  - platform: i2s_audio
    id: onju_microphone
    i2s_din_pin: GPIO13
    adc_type: external
    pdm: false
voice_assistant:
  id: va
  microphone: onju_microphone
  media_player: onju_out
  use_wake_word: true
  on_tts_end:
    - delay: 100ms
  on_end:
    - delay: 100ms
  on_client_connected:
    - if:
        condition:
            - switch.is_on: use_wake_word
        then:
          - voice_assistant.start_continuous:
  on_client_disconnected:
    - if:
        condition:
            - switch.is_on: use_wake_word
        then:
          - voice_assistant.stop:
  on_error:
    - delay: 1s
  on_listening:
    - delay: 100ms
  on_tts_start:
    - delay: 100ms
    - homeassistant.service:
        service: tts.cloud_say
        data:
          entity_id: media_player.mic_mic
        data_template:
          message: "{{ my_stt }}"
        variables:
          my_stt: return x;
binary_sensor:
  - platform: status
    id: api_connection
    filters:
      - delayed_on: 1s
    on_press:
      - if:
          condition:
              - switch.is_on: use_wake_word
          then:
            - voice_assistant.start_continuous:
    on_release:
      - if:
          condition:
              - switch.is_on: use_wake_word
          then:
            - voice_assistant.stop:
# light:
#   - platform: fastled_clockless
#     chipset: WS2811
#     pin: GPIO17
#     num_leds: 60
#     rgb_order: BRG
#     id: leds
#     name: "FastLED WS2811 Light"
#     effects:
#       - pulse:
#           name: pulse
#           transition_length: 250ms
#           update_interval: 250ms
#       - pulse:
#           name: slow_pulse
#           transition_length: 1s
#           update_interval: 2s
switch:
  - platform: template
    name: Use wake word
    id: use_wake_word
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - lambda: id(va).set_use_wake_word(true);
      - if:
          condition:
            not:
              - voice_assistant.is_running
          then:
            - voice_assistant.start_continuous
    on_turn_off:
      - voice_assistant.stop
      - lambda: id(va).set_use_wake_word(false);
  - platform: gpio
    icon: mdi:stop-circle-outline
    pin:
      number: GPIO14
      inverted: true
    name: "Stop"
    id: stop
    on_turn_on:
      then:
        - media_player.stop
        - delay: 150ms
        - switch.turn_off: stop
  - platform: gpio
    icon: mdi:volume-plus
    pin:
      number: GPIO18
      inverted: true
    name: "Volume Up"
    id: volume_up
    on_turn_on:
      then:
        - media_player.volume_up
        - delay: 150ms
        - switch.turn_off: volume_up
  - platform: gpio
    icon: mdi:volume-minus
    pin:
      number: GPIO19
      inverted: true
    name: "Volume Down"
    id: volume_down
    on_turn_on:
      then:
        - media_player.volume_down
        - delay: 150ms
        - switch.turn_off: volume_down
  - platform: gpio
    icon: mdi:play-pause
    pin:
      number: GPIO21
      inverted: true
    name: "Play / Pause"
    id: playbtn
    on_turn_on:
      then:
        - if:
            condition:
              media_player.is_playing
            then:
              - media_player.pause
              - delay: 150ms
              - switch.turn_off: playbtn
            else:
              - media_player.play
              - delay: 150ms
              - switch.turn_off: playbtn